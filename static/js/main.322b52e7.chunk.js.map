{"version":3,"sources":["components/Randomiser.js","components/Chooser.js","components/RadioButtons.js","components/SearchChoices.js","components/Sonnet.js","components/Searcher.js","myFunctions/useFetch.js","myFunctions/randomNumber.js","App.js","reportWebVitals.js","index.js"],"names":["Randomiser","props","handleRandomiser","className","onClick","Chooser","number","handleNumberChange","type","value","onChange","RadioButtons","radioChoice","handleRadioChange","id","name","checked","htmlFor","SearchChoices","apiData","searchInput","handleSelectSearchOption","firstLinesToView","map","poem","title","filter","line","toLowerCase","includes","Sonnet","lines","Searcher","updateSearchInput","width","useFetch","useState","setApiData","isLoading","setIsLoading","requestError","setRequestError","useEffect","fetch","then","response","ok","json","Error","status","result","catch","error","console","log","randomNumber","Math","floor","random","App","setNumber","setPoem","setSearchInput","setRadioChoice","e","target","selectedPoemIndex","findIndex","textContent","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322b52e7.chunk.js","sourcesContent":["export default function Randomiser(props) {\n  const {handleRandomiser} = props\n  return (\n    <div className=\"randomiser\">\n      <div className=\"randomiser-main\">\n        <div className=\"btn-container\">\n          <button className=\"btn\" onClick={handleRandomiser}></button>\n        </div>\n      </div>\n      <div className=\"randomiser-header\">\n        <p> Click Bill to get a random sonnet</p>\n      </div>\n    </div>\n  );\n}","export default function Chooser(props) {\n  const {number, handleNumberChange} = props;\n  return (\n    <div className=\"chooser\">\n      <div className=\"chooser-main\">\n        <input\n          type=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div className=\"chooser-header\">\n        <p>Choose from 1 to 154</p>\n      </div>\n    </div>\n  );\n}\n","export default function RadioButtons(props) {\n  const { radioChoice, handleRadioChange} = props;\n  return (\n    <div className=\"radio-buttons\">\n      <div>\n        <input\n          type=\"radio\"\n          id=\"spin\"\n          name=\"myRadio\"\n          value=\"spin\"\n          checked={radioChoice === \"spin\"}\n          onChange={handleRadioChange}\n        />\n        <label htmlFor=\"spin\">Spin</label>\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          id=\"choose\"\n          name=\"myRadio\"\n          value=\"choose\"\n          checked={radioChoice === \"choose\"}\n          onChange={handleRadioChange}\n        />\n        <label htmlFor=\"choose\">Choose</label>\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          id=\"search\"\n          name=\"myRadio\"\n          value=\"search\"\n          checked={radioChoice === \"search\"}\n          onChange={handleRadioChange}\n        />\n        <label htmlFor=\"search\">Search</label>\n      </div>\n    </div>\n  );\n}\n","export default function SearchChoices(props) {\n  const {apiData, searchInput, handleSelectSearchOption} = props;\n  const allFirstLines = apiData.map((poem) => poem.title);\n  const firstLinesToView = allFirstLines.filter((line) =>\n    line.toLowerCase().includes(searchInput.toLowerCase()),\n  );\n  return (\n    <div className=\"search-options\">\n      <div className=\"searcher-options\">\n        <ul>\n          {firstLinesToView.map((line) => (\n            <li\n              key={line}\n              onClick={handleSelectSearchOption}\n              className=\"search-option\"\n            >\n              <h3>{line}</h3>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","export default function Sonnet(props) {\n  const {poem} = props\n  return (\n    <div className=\"sonnet-output\">\n      <h3> {poem.title} </h3>\n      <div className=\"stanza\">\n        {poem.lines.map((line) => (\n          <p key={line}> {line} </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n","export default function Searcher(props) {\n  const {searchInput, updateSearchInput} = props;\n  return (\n    <div className=\"searcher\">\n      <div className=\"searcher-main\">\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={updateSearchInput}\n          width=\"5\"\n        />\n      </div>\n      <div className=\"searcher-header\">\n        <p> Search sonnet by first line then select</p>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = () => {\n  const [apiData, setApiData] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [requestError, setRequestError] = useState(false)\nuseEffect(() => {\n    fetch(\"https://poetrydb.org/author,title/Shakespeare;Sonnet\")\n      .then((response) => {\n        setRequestError(!response.ok);\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw Error(\"Response status: \" + response.status);\n        }\n      })\n      .then((result) => {\n        setApiData(result);\n        setIsLoading(false);\n     \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return {apiData, isLoading, requestError}\n}\n\nexport default useFetch;","const randomNumber = () => {\n  // min and max included\n  return Math.floor(Math.random() * 154 + 1);\n}\n\nexport default randomNumber;","// import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Randomiser from \"./components/Randomiser\";\nimport Chooser from \"./components/Chooser\";\nimport RadioButtons from \"./components/RadioButtons\";\nimport SearchChoices from \"./components/SearchChoices\";\nimport Sonnet from \"./components/Sonnet\";\nimport Searcher from \"./components/Searcher\";\nimport useFetch from \"./myFunctions/useFetch\";\nimport randomNumber from \"./myFunctions/randomNumber\";\n\nfunction App() {\n  const [number, setNumber] = useState(randomNumber);\n  const [poem, setPoem] = useState(null);\n  const [searchInput, setSearchInput] = useState(\"Heart\");\n  const [radioChoice, setRadioChoice] = useState(\"spin\");\n\n  // get API data on mount\n  const { apiData, isLoading, requestError } = useFetch();\n\n  // select different poem every time number changes\n  useEffect(() => {\n    if (number > 0) {\n      setPoem(apiData[number - 1]);\n    }\n  }, [number, apiData]);\n\n  //  functions to handle input changes\n  function handleNumberChange(e) {\n    const { value } = e.target;\n    if (value > -1 && value < 155) {\n      setNumber(value);\n    }\n  }\n\n  function updateSearchInput(e) {\n    setSearchInput(e.target.value);\n  }\n\n  function handleRadioChange(e) {\n    setRadioChoice(e.target.value);\n  }\n\n  function handleRandomiser() {\n    setNumber(randomNumber());\n  }\n\n  function handleSelectSearchOption(e) {\n    const selectedPoemIndex = apiData.findIndex((poem) => {\n      return poem.title === e.target.textContent;\n    });\n    setNumber(selectedPoemIndex + 1);\n    setRadioChoice(\"spin\");\n  }\n\n  // render the app\n  return (\n    <div className=\"app-container\">\n      <div className=\"header-row-container\">\n        <header className=\"page-header\">\n          <h1> Sonnet Roulette </h1>\n        </header>\n      </div>\n      <div className=\"main-row-container\">\n        <div className=\"sidebar-container-1 sidebar-container\">\n          <div className=\"sidebar-number-holder\">\n            <h3>{radioChoice === \"search\" || isLoading ? \"?\" : number}</h3>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <div className=\"input-container\">\n            <div className=\"input-row\">\n              <div className=\"radio-container\">\n                <RadioButtons\n                  handleRadioChange={handleRadioChange}\n                  radioChoice={radioChoice}\n                />\n              </div>\n              <div className=\"spin-choose-search-container\">\n                {radioChoice === \"spin\" ? (\n                  <Randomiser\n                    number={number}\n                    handleRandomiser={handleRandomiser}\n                  />\n                ) : radioChoice === \"choose\" ? (\n                  <Chooser\n                    number={number}\n                    handleNumberChange={handleNumberChange}\n                  />\n                ) : (\n                  <Searcher\n                    searchInput={searchInput}\n                    updateSearchInput={updateSearchInput}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"output-container\">\n            {requestError ? (\n              <h2>\n                {\" \"}\n                There was a problem accessing the sonnets... Try reloading the\n                page...{\" \"}\n              </h2>\n            ) : isLoading ? (\n              <h2> Sonnets are loading... </h2>\n            ) : radioChoice === \"search\" ? (\n              <SearchChoices\n                apiData={apiData}\n                searchInput={searchInput}\n                handleSelectSearchOption={handleSelectSearchOption}\n              />\n            ) : (\n              <Sonnet number={number} poem={poem} />\n            )}\n          </div>\n          <div className=\"footer-container\">\n            <footer className=\"page-footer\">\n              <a href=\"https://twitter.com/jrobbinsuk\">@joshrobbinsuk</a>\n            </footer>\n          </div>\n        </div>\n        <div className=\"sidebar-container-2 sidebar-container\">\n          <div className=\"sidebar-number-holder\">\n            <h3>{radioChoice === \"search\" || isLoading ? \"?\" : number}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}